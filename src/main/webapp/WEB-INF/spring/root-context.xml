<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/jee https://www.springframework.org/schema/jee/spring-jee.xsd
						http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->

	<context:component-scan base-package="com.spacerental.repository" />
	<context:component-scan base-package="com.spacerental.service" />
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:env.properties" />
	</bean>
	
	<!-- Apache Commons DBCP -->
	<bean id="dataSource"
		  class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${ds.driver}" />
		<property name="url" value="${ds.url}" />
		<property name="username" value="${ds.username}" />
		<property name="password" value="${ds.password}" />
		<property name="maxIdle" value="${ds.maxidle}" />
		<property name="maxTotal" value="${ds.maxtotal}" />
		<property name="maxWaitMillis" value="${ds.waitmillis}" />
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
	</bean>
	
	<!-- Spring SqlSessionTemplate(sqlSession을 내장) 객체 등록 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<bean id="memberRepository" class="com.spacerental.repository.MemberRepositoryImpl">
		<property name="memberMapper" ref="memberMapper" />
		<property name="rentMapper" ref="rentMapper" />
	</bean>
	
	<bean id="memberService" class="com.spacerental.service.MemberServiceImpl">
		<property name="memberRepository" ref="memberRepository" />	
	</bean>
	
	<!-- MapperFactoryBean.getObject()호출 -> MemberMapper 인터페이스 구현 객체 반환 -->
	<bean id="memberMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.spacerental.mapper.MemberMapper" />
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
	</bean>
	
	<bean id="spaceRepository" class="com.spacerental.repository.SpaceRepositoryImpl" >
		<property name="spaceMapper" ref="spaceMapper"/>
		<property name="hostMapper" ref="hostMapper" />
	</bean>
	
	<bean id="spaceService" class="com.spacerental.service.SpaceServiceImpl">
		<property name="spaceRepository" ref="spaceRepository" />
	</bean>
	
	<bean id="spaceMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.spacerental.mapper.SpaceMapper"/>
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>
	</bean>
	
	<bean id="hostMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.spacerental.mapper.HostMapper"/>
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>
	</bean>
	
	<bean id="rentRepository"
		class="com.spacerental.repository.RentRepositoryImpl">
		<property name="rentMapper" ref="rentMapper" />
	</bean>
	
	<bean id="rentService"
		class="com.spacerental.service.RentServiceImpl">
		<property name="rentRepository" ref="rentRepository" />
	</bean>
	
	<bean id="rentMapper"
		class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.spacerental.mapper.RentMapper" />
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
	</bean>
	
	<bean id="NoticeRepository"
		class="com.spacerental.repository.NoticeRepositoryImpl">
		<property name="noticeMapper" ref="NoticeMapper" />
	</bean>
	
	<bean id="NoticeService"
		class="com.spacerental.service.NoticeServiceImpl">
		<property name="noticeRepository" ref="NoticeRepository" />
	</bean>
	
	<bean id="NoticeMapper"
		class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.spacerental.mapper.NoticeMapper" />
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
	</bean>
	
	<bean id="loseRepository"
		class="com.spacerental.repository.LoseRepositoryImpl">
		<property name="loseMapper" ref="loseMapper" />
		<property name="rentMapper" ref="rentMapper" />
		<property name="hostMapper" ref="hostMapper" />
	</bean>
	
	<bean id="loseService"
		class="com.spacerental.service.LoseServiceImpl">
		<property name="loseRepository" ref="loseRepository" />
	</bean>
	
	<bean id="loseMapper"
		class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.spacerental.mapper.LoseMapper" />
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
	</bean>
	
	 <bean id="AboutUsRepository"
		class="com.spacerental.repository.AboutUsRepositoryImpl">
		<property name="aboutUsMapper" ref="AboutUsMapper" />
	</bean>
	
	<bean id="AboutUsService"
		class="com.spacerental.service.AboutUsServiceImpl">
		<property name="aboutUsRepository" ref="AboutUsRepository" />
	</bean>
	
	<bean id="AboutUsMapper"
		class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.spacerental.mapper.AboutUsMapper" />
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
	</bean>
	
	<!-- ========================================================================== -->
	
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 미리 만들어져서 사용할 수 있는 Advice 객체 (<bean에 대한 정의)-->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*Tx"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution( * com.spacerental.service.*.*(..) )"/>
	</aop:config>
	
</beans>
